---
description: react-native-mediapipe configuration and face detection patterns
---

# React Native MediaPipe - Configura√ß√£o e Padr√µes

## üéØ Configura√ß√£o Obrigat√≥ria
- **Face Detection Model**: Usar `face_detection` com confidence > 0.7
- **Face Landmarks**: Capturar keypoints completos (468 pontos)
- **Performance**: Processar a cada 10 frames (n√£o todos)
- **Resolu√ß√£o**: 640x480 para balance performance/precis√£o

## üì± Implementa√ß√£o de C√¢mera
```typescript
// Sempre verificar permiss√µes primeiro
const requestCameraPermission = async () => {
  const { status } = await Camera.requestCameraPermissionsAsync();
  return status === 'granted';
};

// Configura√ß√£o do MediaPipe
const mediapipeConfig = {
  runningMode: 'VIDEO',
  maxNumFaces: 1,
  minDetectionConfidence: 0.7,
  minTrackingConfidence: 0.5
};
```

## üîç Keypoints para Detec√ß√£o de Bocejo
- **Pontos da boca**: √≠ndices 0, 17, 18, 200 (abertura vertical)
- **Raz√£o de aspecto**: altura_boca / largura_boca
- **Threshold**: raz√£o > 0.6 indica poss√≠vel bocejo
- **Valida√ß√£o**: manter estado por 3+ frames consecutivos

## ‚ö° Otimiza√ß√£o de Performance
- **Throttling**: processar apenas 1 de cada 10 frames
- **Worker Thread**: executar detec√ß√£o em background
- **Memory Management**: limpar buffers de frame n√£o utilizados
- **Battery**: pausar detec√ß√£o quando app em background

## üö® Tratamento de Erros
- **Camera n√£o dispon√≠vel**: fallback para modo simula√ß√£o
- **MediaPipe falha**: reiniciar pipeline automaticamente
- **Performance baixa**: reduzir resolu√ß√£o dinamicamente
- **Memory leak**: implementar cleanup nos useEffect

## üìä Estrutura dos Keypoints
```typescript
interface FaceLandmarks {
  landmarks: Array<{
    x: number;
    y: number;
    z: number;
  }>;
  confidence: number;
  timestamp: number;
}

interface YawnDetectionData {
  landmarks: FaceLandmarks;
  mouthRatio: number;
  isYawning: boolean;
  frameCount: number;
}
```